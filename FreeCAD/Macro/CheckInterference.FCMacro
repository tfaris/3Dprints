import FreeCAD
import Draft, Part
from PySide import QtCore, QtGui


def errorDialog(msg):
    # Create a dialog Box
    # First argument is the icon used: QtGui.QMessageBox.{NoIcon, Information, Warning, Critical, Question} 
    diag = QtGui.QMessageBox(QtGui.QMessageBox.Information, 'COLLISION DETECTION Message:', msg)
    diag.setWindowModality(QtCore.Qt.ApplicationModal)
    diag.exec_()

# TODO: Set transparency of selected objects so we can see collision_obj
# TODO: Display a dialog that, when closed, restores the original transparency of the selected objects.

selection = Gui.Selection.getSelectionEx()

if len(selection) == 0:
    shapes = [Draft.clone(obj) for obj in Gui.ActiveDocument.Document.Objects if obj.isDerivedFrom('PartDesign::Body')]
else:
    shapes = [Draft.clone(obj.Object) for obj in selection]

if not shapes:
    errorDialog("The document has no bodies that can be checked for interference.")
elif len(shapes) == 1:
    errorDialog("Select more than one body to check for interference.")
else:
    collision_obj = App.activeDocument().addObject("Part::MultiCommon","Intersection")
    collision_obj.Shapes = shapes
    # NOTE: Recompute must come before setting ShapeColor, for some reason.
    App.ActiveDocument.recompute()
    #Gui.activeDocument().Body.Visibility=False
    #Gui.activeDocument().Body001.Visibility=False
    #OBJ1.Visibility = False
    #OBJ2.Visibility = False

    collision_obj.ViewObject.ShapeColor = (1.0, 0.1, 0.1)
    collision_obj.ViewObject.Transparency =  50
